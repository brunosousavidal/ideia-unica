instalar no windowsshell
chocolatey
choco install nodejs.install

criar um repositorio no github
adicionar o gitignore node
fazer o clone do projeto na maquina

no vscode
yarn init -y
yarn add next, cria no projeto o node junto

yarn add react
yarn add react-dom

configurar o package.json
yarn dev

fazer o commit com github desktop na branch
fazer o push request

abrir a vercel
logar com o github
new project
Import Git Repository
repositorio brunosousavidal
search o nome do repositorio se não achar habilite no
botão configure github app
Repository access
selecione o repositorio e save
copia o endereço da pagina no github
feche a janela em seguida clique em import
selecione o usuario
defina a tecnologia a ser usada
deploy realizado

Para publicar o site com um dominio .com.br (registrado)
criar o dominio no site registro.br
no vercel entre no projeto em seguida settings - domains
incluir o nome do site criado, adicionar
na guia nameservers, copie o nome dos dns criados e inclua no dns do site registro.br

no site whatsmydns.net, para ver a propagação do dns do site pelo mundo

Pagina Estatica no ar, graças ao file-system Routing - automaticamente gera as rotas do site
na pasta pages - paginas .js ou .ts viram paginas na web
/pages/index.js -> site.com/index
/pages/sobre.js -> site.com/sobre
/pages/tempo.js -> site.com/tempo
na pasta api - cria rotas
/pages/api/tempo.js -> site.com/api/tempo

Tornar a pagina mais dinamica
tipo site.com/produtos/[parametro]
usar o link do nextjs - vincula as paginas estatica
cria no servidor uma "prefetch" - pre-busca, para dinamizar o acesso as paginas
commitar na breach
fazer push e automaticamente publicar no vercel ent

mudar algumas informações na pagina estatica
crie o tempo.js
utilize getStaticProps
para pegar dados da pagina estatica
fazer o commit, push e ver no vercel
as duas datas virão iguais do back-end, como visto no codigo da pagina
mas quando chega no browser a data dinamica será corrigida pelo navegador

dentro do projeto no vercel, na gui Deployments ao lado de overview
você pode ver todos os deploy ja realizados de
e nos tres pontos ao lado de cada deploy, você pode colocar em produção

como o getStaticProps e executado somente na build
o console.log("> Passando pelo getStaticProps();");
vai aparecer apenas do deploy no vercel
para visualizar o log, va na lista dos deploys e peça Inspected Deployments

e o console.log("> Passando pelo FrontEnd;");
esse você consegue vê-lo no frontend, ou seja no navegador
na ferramenta dev (f12), clique em console

criando uma função assincrona de delay
const delay = ms => new Promise(resolve => setTimeout(resolve, ms));
esse delay em desenvolvimento faz com que o navegador demore 5 segundos para atualizar a pagina
mas quando publicado no vercel, esse atrazo aparece somente no deploy, uma unica vez
no navegador a pagina atualiza muito rapido

Agora corrigindo o problema informação estatica da pagina que só está sendo feita no deploy
retirando os artefatos de delay

incluir em props (revalidate: 1) para colocar como validade da pagina estatica com 1 segundo
isso fará que o navegador solicite ao backend que revalide a informação do
getStaticProps

Criar uma requisição ao site ConvertKit para saber quantos inscritos tem na newsletter no felipe
criar o arquivo .env na raiz para incluir a variavel de ambiente com o codigo chave da conta de usuario
no gitignore o arquivo .env criado está setado para não aparecer no github

criptografar as variaveis de ambiente no vercel
entre no projeto, em seguida clique em settings, environment variables
passo 1 qual o tipo de dado - secret
passo 2 incluir o nome da variavel - CONVERTKIT_API_SECRET
crie um apelido para a variavel de ambiente
inclua o valor a ser encriptado
por fim salve
passo 3 quais ambiente ela estara disponivel
produção e homologação
marque automatically expose, para que as variaveis de ambiente do vercel fiquem disponiveis

Criando cache no backend para diminuir a sobrecarga de requisições do frontend evitando sobrecarga na API ou banco de dados
stale-while-revalidate

utilizar dynamic routes
criar dentro de pages a pagina produtos
crie o arquivo [id].js
/pages/produtos/[id].js -> site.com/produtos/[id]
assim posso capturar qualquer valor para gerar rotas dinamicamente
utilizando useRoute - prega a props do FrontEnd

http://localhost:3000/produtos/10

criar paginas agora com os parametros dinamicos
criar paginas dinamicas no servidor
getServerSideProps
pegando props da requisição trata no backend e injeta na pagina criada para enviar ao client

Geração incremental de paginas estaticas
Inscremental Static Generation
1 - getStaticProps (pega props unica vez na build da pagina)
2 - getServerSideProps (pega props a qualquer momento em tempo de execução)
3 - getStaticPath (pega props em tempo de execução no lado do servidor e com a opção de estar disponivel nas CDN's do servidor)
