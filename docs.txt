instalar no windowsshell
chocolatey
choco install nodejs.install

criar um repositorio no github
adicionar o gitignore node
fazer o clone do projeto na maquina

no vscode
yarn init -y
yarn add next, cria no projeto o node junto

yarn add react
yarn add react-dom

configurar o package.json
yarn dev

fazer o commit com github desktop na branch
fazer o push request

abrir a vercel
logar com o github
new project
Import Git Repository
repositorio brunosousavidal
search o nome do repositorio se não achar habilite no
botão configure github app
Repository access
selecione o repositorio e save
copia o endereço da pagina no github
feche a janela em seguida clique em import
selecione o usuario
defina a tecnologia a ser usada
deploy realizado

Para publicar o site com um dominio .com.br (registrado)
criar o dominio no site registro.br
no vercel entre no projeto em seguida settings - domains
incluir o nome do site criado, adicionar
na guia nameservers, copie o nome dos dns criados e inclua no dns do site registro.br

no site whatsmydns.net, para ver a propagação do dns do site pelo mundo

Tornar a pagina mais dinamica
usar o link do nextjs
commitar na breach
fazer push e automaticamente publicar no vercel ent

mudar algumas informações na pagina estatica
crie o tempo.js
utilize getStaticProps
para pegar dados da pagina estatica
fazer o commit, push e ver no vercel
as duas datas virão iguais do back-end, como visto no codigo da pagina
mas quando chega no browser a data dinamica será corrigida pelo navegador

dentro do projeto no vercel, na gui Deployments ao lado de overview
você pode ver todos os deploy ja realizados de
e nos tres pontos ao lado de cada deploy, você pode colocar em produção

como o getStaticProps e executado somente na build
o console.log("> Passando pelo getStaticProps();");
vai aparecer apenas do deploy no vercel
para visualizar o log, va na lista dos deploys e peça Inspected Deployments

e o console.log("> Passando pelo FrontEnd;");
esse você consegue vê-lo no frontend, ou seja no navegador
na ferramenta dev (f12), clique em console

criando uma função assincrona de delay
const delay = ms => new Promise(resolve => setTimeout(resolve, ms));
esse delay em desenvolvimento faz com que o navegador demore 5 segundos para atualizar a pagina
mas quando publicado no vercel, esse atrazo aparece somente no deploy, uma unica vez
no navegador a pagina atualiza muito rapido

Agora corrigindo o problema informação estatica da pagina que só está sendo feita no deploy
retirando os artefatos de delay

incluir em props (revalidate: 1) para colocar como validade da pagina estatica com 1 segundo
isso fará que o navegador solicite ao backend que revalide a informação do
getStaticProps

